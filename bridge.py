# 桥接模式

"""
第一种理解
在单一职责原则指导下组合代替继承的模式
主要是为了避免类的无限扩展
需要将类中的不同维度分成多个类

第二种理解
将接口和实现分离
主要是为了拆分一个具有多重功能的庞杂类
具体可见 https://refactoringguru.cn/design-patterns/bridge
其中的遥控器和设备的例子就是将设备的调节功能拆分成另一个类
遥控器是抽象，设备是实现，遥控器相当于连接客户端和设备的桥，对遥控器的操作实际上是由遥控器调用设备提供的原语操作
需要注意的点是 实现部分不需要和抽象部分想匹配，也就是说这两个接口可以完全不同，通常实现接口只提供原语操作，
而抽象接口则会基于这些操作定义较高层次的操作



LOL中如果英雄的每个皮肤都要定义一个类的话
"""
